openapi: 3.0.2
info:
  title: 'Sidecar service to update deployment on k8s-cluster  '
  version: 1.0.0
  description: |
    The project is to implement a microservice which would be co-deployed
    along with pubgrade (i.e. an open-source decoupled,
    publish-subscribe-based CI/CD solution that sits between CI and CD that
    allows developers to notify deployments of available updates) in
    Kubernetes to listen for update notifications from pubgrade and update
    the subscribed service accordingly.
paths:
  /deployment:
    # post:
    #   summary: 'Register new deployment'
    #   description: Create new deployment on the cluster. Deployment can
#    also be created manually.
    #   operationId: postDeployment
    #   tags:
    #     - deployment
    #   parameters:
    #     - in: header
    #       name: X-Access-Token
    #       required: true
    #       schema:
    #         type: string
    #       description: Secret used to identify source of request.
    #   requestBody:
    #     description: Schema for deployment 
    #     required: true
    #     content:
    #       application/json:
    #         schema:
    #           $ref: '#/components/schemas/Deployment'
    #           additionalProperties: false
    #   responses:
    #     '200':
    #       description: 'The deployment was successfully created.'
    #       content:
    #         application/json:
    #           schema:
    #             type: string
    #             description: 'The deployment was successfully created with
#    this `deployment_id`'
    #             example: 'deploy_123'
    #     '400':
    #       $ref: '#/components/responses/BadRequest'
    #     '401':
    #       $ref: '#/components/responses/Unauthorized'
    #     '403':
    #       $ref: '#/components/responses/Forbidden'
    #     '500':
    #       $ref: '#/components/responses/InternalServerError'
    #     default:
    #       $ref: '#/components/responses/Error'
    get:
      summary: 'List available deployments.'
      operationId: getDeployment
      tags:
        - deployment
      responses:
        '200':
          description: 'List of available repositories'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Deployment'
                additionalProperties: false
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'
        default:
          $ref: '#/components/responses/Error'
  /deployment/{deployment-name}:
    get:
      summary: 'Retrieve current deployment image for the deployement'
      operationId: getImage
      tags:
        - deployment
      parameters:
        - in: header
          name: X-Access-Token
          required: true
          schema:
            type: string
          description: Secret used to identify source of request.
        # - in: path
        #   name: id
        #   required: true
        #   schema:
        #     type: string
        #   description: Identifier generated when registering new deployemnt 
        #     via `POST /deployemnts`
        - in: path
          name: deployment-name
          required: true
          schema:
            type: string
          description: Name of the deployment to be modified.
      responses:
        '200':
          description: 'List of available repositories'
          content:
            application/json:
              schema:
                type: string
                description: 'Image name'
                example: 'akash7778/ubuntu:0.1'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'
        default:
          $ref: '#/components/responses/Error'
    put:
      summary: 'Modify registered deployment'
      description: Register
      operationId: updateDeployment
      tags:
        - deployment
      parameters:
        - in: header
          name: X-Access-Token
          required: true
          schema:
            type: string
          description: Secret used to identify source of request.
        # - in: path
        #   name: id
        #   required: true
        #   schema:
        #     type: string
        #   description: Identifier generated when registering new deployemnt 
        #     via `POST /deployemnts`
        - in: path
          name: deployment-name
          required: true
          schema:
            type: string
          description: Name of the deployment to be modified.
      requestBody:
        description: Schema for deployment 
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Deployment'
              additionalProperties: false
      responses:
        '200':
          description: 'The deployment was successfully created'
          content:
            application/json:
              schema:
                type: string
                description: 'The deployment was successfully created'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'
        default:
          $ref: '#/components/responses/Error'
    delete:
      summary: 'Delete registered deployment'
      description: Register
      operationId: deleteDeployment
      tags:
        - deployment
      parameters:
        - in: header
          name: X-Access-Token
          required: true
          schema:
            type: string
          description: Secret used to identify source of request.
        # - in: path
        #   name: id
        #   required: true
        #   schema:
        #     type: string
        #   description: Identifier generated when registering new deployemnt 
        #     via `POST /deployemnts`
        - in: path
          name: deployment-name
          required: true
          schema:
            type: string
          description: Name of the deployment to be modified.
      responses:
        '200':
          description: 'The deployment was successfully created'
          content:
            application/json:
              schema:
                type: string
                description: 'The deployment was successfully created'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'
        default:
          $ref: '#/components/responses/Error'
components:
  responses:
    BadRequest:
      description: 'Bad Request
       ([RFC 7231](https://tools.ietf.org/html/rfc7235))'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'   
    Unauthorized:
      description: 'Unauthorized
       ([RFC 7235](https://tools.ietf.org/html/rfc7235))'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Forbidden:
      description: 'Forbidden
       ([RFC 7231](https://tools.ietf.org/html/rfc7231))'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: 'Not found ([RFC 7231](https://tools.ietf.org/html/rfc7231))'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    InternalServerError:
      description: 'Internal server error
       ([RFC 7231](https://tools.ietf.org/html/rfc7231))'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Error:
      description: 'Unexpected error
       ([RFC 7231](https://tools.ietf.org/html/rfc7231))'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  schemas:
    Deployment:
      type: object
      description: 'Deployment Object'
      properties:
            image_name:
                type: string
                description: Name of image to be used for deployment
                 repository.
                example: akash7778/broker
            tag:
                type: string
                description: Image tag
                example: v0.1
            developer_trust:
                type: string
                description: Public key of secret used to sign docker trust.
      required:
        - image_name
        - tag
        - developer_trust
    Error:
      type: object
      properties:
        status:
          type: integer
          format: int32
          description: |
            HTTP status code (as per 
            [RFC 7231](https://tools.ietf.org/html/rfc7231)) generated by the 
            server for this occurrence of the problem. This must match the 
            status code in the actual HTTP response. Used for convenience of 
            clients (e.g. to determine what the original status code was in 
            cases where it has been changed by an intermediary or cache or when 
            message bodies persist without HTTP information).
          example: '500'
        title:
          type: string
          description: |
            A short, human-readable description of the error.
            The value should not change from occurrence to occurrence of an 
            error, except for purposes of localization.
          example: 'Internal server error'
        detail:
          type: string
          description: 'A human-readable explanation specific to this occurrence
           of the error.'
          example: 'Internal server error'
      required:
        - status
        - title